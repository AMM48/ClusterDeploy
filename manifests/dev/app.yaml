apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: dev
  labels:
    app: bookmark-app
    tier: api
spec:
  replicas: 3
  selector:
    matchLabels:
      tier: api
  template:
    metadata:
      labels:
        tier: api
    spec:
      securityContext:
        runAsUser: 33
        runAsGroup: 33
        fsGroup: 33
        runAsNonRoot: true
      containers:
      - name: bookmark-app-api
        image: wajeeh8/bookmark-app:serverk8s
        imagePullPolicy: Always
        securityContext:
          runAsUser: 33
          runAsGroup: 33
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
             - All
        env:
        - name: HOST
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: host
        - name: READ_HOST
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: read_host
        - name: USERNAME
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: admin_username
        - name: PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: admin_password
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: db_name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: client
  namespace: dev
  labels:
    app: bookmark-app
    tier: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      tier: frontend
  template:
    metadata:
      labels:
        tier: frontend
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        runAsNonRoot: true
      containers:
      - name: bookmark-app-client
        image: wajeeh8/bookmark-app:clientlatest
        imagePullPolicy: Always
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
             - ALL
        command: ["sh", "-c"]
        args: ['sed -i  "s/endpoint/https:\/\/apidev.bookmark.com/g" build/static/js/main.3ae9d6e4.js && serve -s build']
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: db-network-policy
  namespace: dev
spec:
  podSelector:
    matchLabels:
      app: db
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: db
    - podSelector:
        matchLabels:
          tier: api
    ports:
    - protocol: TCP
      port: 3306
    - protocol: TCP
      port: 3307
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  namespace: dev
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
     - dev.bookmark.com
     - apidev.bookmark.com
    secretName: tls-secret
  rules:
  - host: dev.bookmark.com
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: clientsvc
            port:
              number: 80
  - host: apidev.bookmark.com
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: apisvc
            port:
              number: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql
  namespace: dev
  labels:
    app: mysql
    app.kubernetes.io/name: mysql
data:
  primary.cnf: |
    [mysqld]
    log-bin
  replica.cnf: |
    [mysqld]
    super-read-only
---
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  creationTimestamp: null
  name: db-secrets
  namespace: dev
spec:
  encryptedData:
    admin_password: AgBVfGUodPWw0lOCKvl2jk3hiJkMTvMc/TqLNOVS/Uc/qXyE+Sp0TXiZgqvMdTDpG9BFht99mTWzGQax3N7CA6JdfK78jOapjXiq0e5Tl5l4lDOpA58F4jHumemOizQ/YMsdQSUMn5qiwQFDtGWXAel7eYtztklM96sbL4se0tIedX6yBpUoMkPe5lfU+dmHbZhPkJHTDwc4DYCvQ+wUecq2XLHETFHvIqr9jk0+rKd5SOntCZ/cPpOPaA5GGdNK9JJPQ8nsRSvxuv/8eX5RV0NVfy8ZmtSH4nOwUWPF7ovkRiCAVMvJQF9TpsyOQtlZyyoAi+C0aZOfgKvdw5/IHSRdeZ8Ymz8BYcWdhk1lsGKn6o++3DqH7A3pG0lbZW+nsyOBZVKHUpjyFJZp0bkSPnl/z926QiFDojUZW1cRWZ7mTLFGn50s/sqg+LG8PsizLQtJWhM+JNcS1wdyIcOMc1OAkRQ+wJaF+mSyK4nPKt+92dIu904AMm+jdsoq52oPJBDXrFm3mcPfQETBZm0dZls597029jxXEIkNnIpUymAKDFzzGeuSOteog4z32wXCyW+RbqUMe+eHXP1RZ/SKCYr8+75LCH+OdhSCdUbuMFQ/esGdOc2chjBnKlZFp8Mivuv2RAoUJZBZSbmF01ZJMflgPNauH7mktjAjeyVoGI5mtGPWU3CmauSwki9KjpbZP0TW+KmfCa4qachhog==
    admin_username: AgBvuy+YLTX8Y0MvpSYuf8Jb0+SNWdSpvRGNw2AP9xc+BGfpvN+0OKhLdm8A6baBy5+M+YKjkOIRGk/yFdkrn5mPlYvZSXEjIcdXu5/2AeM8iZmAeuMLMJHs7Iu/WiVPm/R5acfWkoPkphB0Wd8raXufARtyLscF3ktUSCE/3Q+TgQjsElPXM6zqaExpnrNIQ372qC9yxQTliOe8NQyWjyxeL+xH6sjTt1GlTiedXkrhde9lDxuup9YLVY1gtkAkGg+2YUWHNdteR2twPMgjs1iV3LzHncyMlL9Qtgcxbl5RLyL/QHFPjuFSAaLYdYxTJ35ayvgaQgZZDWiim5pX5WcerP1tM9Otw8nI4ae4MPxFIveYeRTAtRaN/uZcdAQghkcxd6pLM1HTp0b0zLqNJxelUBlViqP60IT2UVUikxKH0QTFFGTfZZOxXCfo7ZuM06lp8bMHjmRJSLBvND+cJEV7AqPi+/1fRHWfjjVF/+RND13k33hYDGabv4YZvVvPOg5mEdbPjaPnib9iLQpTvbcTgVqN5GzQAosqmzCCBNXZR6b/fAwulq4UKSupwCLFGiG8UWp6pTAGhn2iGd2Ebl/Ee6OsMb21r9X1fNxnwQ42WqT4yNvjWkdIe3I8DazM4P+lA3VtoXj7CfmsG5oDPqMyNMZrlyA87ezPnzcG+uYo38PhGHiXhGHnE8i+Ur1JX9BKXWfOBg==
    db_name: AgC8jAkT/1XljParDyxMJpyrg15KQOVtsEq+A/J2BkCgjosCJCgd8K2NVo2fDz9l6hkfh9ZHQGZC95z2xrS+tVICLViZMKKiyKiW6jRzKuqdLFEvQ5IfcfZYkGqd7AgwKJecBk6ylYXLeIlt9PEVLec8IQ4aFxYRIez5kD9Bh//rp5/5AXaiO4YJ6hHG4GSxwSn/fZAn0tIr+6wvFmVlzdQbqKnWdw5GGyafSb6sjd/swKBrIHEUJJHsntJ3DVZSXWPBZj2ShzSgtDETeyzF1EfrG5AVHCdUoy27DwPySTsJQSBomPzXttW6CMkYDISyjdIDbcZuWNpSs2OwBI3h9bMOAKqr9Re0ZQOovwh7V2rPozSmnjPJkT9wWcnxTlHcQU8TtBPV2df4Utg9ZudeNnsDFt+akQYOmRmIArRgYnr5pVpLqLE8zDx0ZG10UgsxVHigwXeDmZ/oq49cWt5F9CL1o9eWIg023yJdFKonl4XoUZf/CXsVgMgDASn3wsGtyHaS1HS0bOR8D/h4DGdbqDdlZUZyv/4UahNK3PAVa7f7Mb8ixjmn7DeHu9wWbOwRIoWpie9I4xFVzuACakKJgOI6n6siGvuC7OXYUUwBI7aJzxbigMfmyoX2KZON5j18+UXi8gUYyf3wgG/qK8hvWmnPG+rZlPGn0qwl6ybIOG5FlQuWSqVax5bfEac+E2MJBcYFhX/Sdwg54CBg5ogLjA==
    host: AgA4agROy0jSBxHFdXlgdylaSWwLUA0rRuLqUEsJ5c2+qPL9iSpc7Z4N+FxuvOK0BiHd4lBcVm6R8fPECj846m408G7RCjOFpitZwJcPgeIHGF6QM2CniUU1G5Bh1Uk0ogDpyGDk1wJHXek4MiRtqqwHRcMDDrljOlPYjhvrB7Fkk3+xjvXD6j6brod4UJSxJF15wCkOywYcL2t+X3JwA51xXoRKSTDcuPiB3Xyz9BxbRLqHcPXLYRG2XaRfNTXViLnbIvboxjs/wYUk8Pk9BCSimB+jL4nt/zROe5BqS5ATK/95I7+J4hgYYL/lgSrw5saR0NRksOdTWffHWnHpZsbBuhSYYl6sAufB1kRMFYIvW+I7co2cmh1Dl23JrJc47j7rux+CrbnV5V2j8glUiZvBXC1JBG54x9lzBIgayuYhhqq2vQLeYxltGF1XEfrJxtZe5f4qWyzw9eM/nkEAhaoKNP/SQwhsvywOKkVjbHh+CLT9w/N7DJ1vufzXBNAEvbS4VTVQHatVxZ/99iexK55Xy4wslPknmeoN+Pg0GagpP2HZjAyA/wHc+OtRgyjf7E9qrzAZkS6kLVOg9djOIpjv/SF2TXPGYgibIrC8Tcn4KtTcpRtMNPSrUvUg59tqre6izjL35669QSmkhCIo4nrdzI9SXidr9iV0cw+Drk2TaeVf4+hLabXAc3v9jVwh6kWEJngQV+DDkGst
    read_host: AgB01oW4xyzMxw+0a5ixq3Fd1GuAVgql5mATfNhnPgghHQN3rhKFZumelTU1MxD+fWRO0N5P6U02YrExxLG91subluWp2k85PLrRA5Jau53YpzjSXxn4jUlKVlVvS6NUx26K8EiF24/vwp/FdSNSw5Jf85Jg5wM6eJo9BbO3h7GXqN8T243lKuGiAfoyC5W/91rJCz4SBPGV9VQ9yjMDjFynxpVslbLMmX/vNLRN9thM2Ml0Z25cXBJaPE9V/NtNQ0Pv1XfSEe29ahmlJQ3oozBiodpc8/GMybk41YLT8YwEfookLPavFn2zejIG+hvJGxDhMvQCGJZcY9PlBLDMuxnbxePtu1nnIEkg1Zi5Q2xA0U0jvntVjDIwC8Tmr0gnOSHz++2eLkErDGnUwKjxVqJx8rtgm281tLErvtAc9xpxzHUi5EJ/xU8pfCOhX7+AUESxLEWRgExWhiIJcs3cOo+V2OoSuC+K4wWKH0oDWgDvn7VLsiEwePAIOFaLfv84G7QqZsehH8VVfu2DgchSQ/1RMWvo3zQbdCeQJwMkYCablwHTwe4q5bvBLmwwcD22OWD3eugX/ftscXcn4J3VBaPGdmHOs+ZO49lHia7LNtbAPHNhh++BXH5kkjL2cQS+oCvU/8OGDOKL0GiAHjspa2iLTsQ34PSqWhfE0Roz12KZG/SsKF7rEUzYbVHOBpo//N32Dfj0RQOtggU6
    root_password: AgCumSAZckgsO2zw+M4JG0LB0NLJqf5tj2+LfI/PSQqTM3f24yg/ZmjHUR7OZAD9YBzZSwW66FQ81wtvVJyLcW6+lAS1UA1f2fvYuisJjm1lXZeyMa/4OPtWW1Zvz15LA1o0YjX5+p/lbZmkF/W7Pg6OAqP2PNir+V8PpgkUoaBxxMSAQRSC4cqVVHwo/+DzP6HkHsls8Lta8qDLHE7tclCkbH1hJKYh52R+SYchl3ef7oyZtVPSVFfIDuLtuD+AskbpEvVubMcD/3RP+yNa9fD7nhpzvRaiHpL1j5O1pN/LUTb7VzmMT+eeXeQY7Mc/gFFJ4AgevTnMHtkvLxJeemhvJm/xqzEx2Yjoi47cq//es5uu1bkjLTYnt7kGwGFWzqge53PEXxAHe50ofMaqyi9neMZuRrekgxGPyQgyvuDu8Ib0yNiDySjBifnaFwKK5aM+H5acSZOla5EDIX+AGvcYwTm2g44LL+KD7TJ8vJHuJilfO5qK/gISSpT0VQem623K+im/Z5W98IZ90SYw6dGgRT6ca1AnNPpreXnoRlmdEZvcygW4lPY+cDrPQmh4Tuy+QpGh6BtlDYP37iwM5K5AEoRV9G7E3bIuUQ9snqACuLlo6205DRtzCCARkTI+OuT2m/9yEHmlD47Xsh9NohQbileYGYKh9ZgriPrQF/2urWy+84QZ8U0ZY/2q30OZw1J+2gkO
    root_username: AgBALbM6YTLqbHppVgPtEhYQ8bR5z0rsgMPv+s86I1QxLP1DHzSQ631ZsuKnSMx0xmYSEKtyTcF9MfbECzB2chcv+ZoaErhNSZjGNZIIqd90VSOTZl3eCbw7J8ITxIC79nW7GvHgWT4VaBBh3ZzB3MRyqBp1tjXVjE2PUI0zH2DiB75K7TUabU8atVJw1z58ZkqCS1zB+Q5GhipUB2SQwAPepl+5wzfWPIsnMRETAdQp9Gz+jk9hF7Ap+9znusCI8vuDDI18SjuN3mBp7BK8Bdub26KFvaYB2H2MmneooY/t3RWe44bIItg9de4Zl1ZeY4dpaDXCqztHXKemoqQdoUMkkmflAEb7/tE5MHL/1Ni6E3xB6ECoPHG+jUbPDGLy4KOfZZWxqHqBgoq6x1ThiYWahl78uKYUGeuMHDUCAdzr75G+o7pbPyPpWqYTIXMqlA5X+/wbzL2MnkE2h6DY9AiYS3VrjrC21fml88Jw7Q0A1mL3boG+9pz5ksnUqhiKoqRQbPbBjVcsFLzgpVSmqd7Zti5ZvfSvglr4kc5lMsRqAsigorIRHicukWIYyebExK/UBdRpVRFRd+op9UEqO/9nlmhvBR0NAjgAo4qW5lzEFXUvxnWEbHF7fBGGlbCDLEUazlHUKZw8U0qHrmxtCxY5aW45stGfVf2fPxixEeS07lz7YWUm0jRuJPhiO7AATZuhFeon
  template:
    metadata:
      creationTimestamp: null
      name: db-secrets
      namespace: dev
    type: Opaque
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  creationTimestamp: null
  name: tls-secret
  namespace: dev
spec:
  encryptedData:
    tls.crt: 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
    tls.key: AgByWocBUa1bzk6Mm3fyPJLqfKrUFbpNAUOY+IjE82NRGAMmA6hFlscRamvLPJ3ksz8SeW2cZnZ0hsPpbbrTNGFI8luKfUFAe9iO1ESBL6AsMlovheCiaXuTmk3r+/a6/yxdQBNTBAya1JRyUHG3Kfd1eL9zt7WJJJAsCTujAoTCe7GB0C1ffq+qwcLtp8Emxhe9YYkROsie83LPCFkx/FxCQ0A+eSXHIW5L1fCLEhpyT0onjDYqgQwfBTiHvYgcNNPoZyoCTgjKtDBhfexx4l2f2yNWWGFkDEfY7h7OKrkUG+dVZU1ubk6LozMg7cNajbPwXiFtGLqQoq91/Gmr+NE7c6H3xivfe+dRVu5O8VUewSk0HLficIyolReJOP4Xirfy5ECa4NZSiEVOtXfcE651o2QPLGQkLE5sHXtA2J/6Q5uv0zhDHVmxFSbMTO0bWf+Y44BczibXvbaI4q+m6Ol/kjxrbWg2+iKt2GREZ/3rLU2qt/7SLLzQqgxsNAhZa78aursotwktPC+Xk/2mCsRlN5S48oAeDR9EyLzRn1+x8W3xmEd80+zS7g80cnfRIY8LZOG7NOr7ds6hqGfXNPbHC4ZUHTiGYvnADH9WOn/Gm4dGYy4U0BIQMTKwDeSnYFBvLize6eYOtQUN7UYUCb2kbM3p34UyYMdV3BfQ7u4l9fKdVZmqHxoBuR6swisNYoAy/NM0PcKNc0Fc+2G8Vw+s+tYGY4d+CovMdHSHr17p3xYjEQIsxe4E7OhwW4IGN9cjVILed8uSlzCHQjAIb7d3usBaTvkL8MrSCVDj6E6tj7jmlPhLkX9GzgPF5ue0cw+2rJybwNJGCpYAxH7JegRtUNTZzhk0eQzHKOILQO7Jz69GRG0+4owyoziAieh0DtsQDJJOv/7wRhuuLWernRLRFYLhnA76vxJbJHUsSnZKdBG+8PG9qc2oSXSjBQJ1UtXU+c3Na0CGCom9waSdTJNA+7AgDKsUWN6BchRTWBktGuKSwYgc4CerZUXK8TWzXtm5W7jh2cCkWj2DfsAfoNx5PBtUd4bo4IPVIEivO5+7EGxv0KHVhEmO0Jvf8sXeyi3ZNMoDP6iETk5/CBIxMvRbuoiekWLtbVstE+ogMuWJyIast/uK0GCOPA30EGlF54Fysf6VU99DxZl1ZY88BIb+4hZaia8tAzmjkoKlXko0W/sS7b4lnBYmVN2jNthKNexCLOT2mOcqDd043bBfnhgEm4lvsCDQjJjRMcg/wva/9cw0Umk597QRzlcJqtuVMaAXdsJ2fTtNXFlUqfV5yOPUgRkc2ca5dkTszNBjs6jldcAibTpbTs79nYt1m3FeSemUFlv2y0zmto9tlznUqucbc2gYrJck6/LL1WFNQ8Wgd8juyivKvdDa/H7z6VTvHMRkYGAQfw5VdaVu51HJCsutQUfXqUTMyV5SVNo8aNijGBfOwhJ8BCewp3bgnTl9MVt49dangdy+No0gBdIetgn+cRlMbe+wYyT8XobFovxiOC+nc8aYkXpeLKvPWPSOb8c2Sz7mJGi9seul44eJ3MJHulZQXn2LkXAtgseQvj4fevF1WcfV6zgcMbsnZAEhqGoCidVT8s2EEemtWaEKmMQfaGsS7gMlPo9Fes5R3eIdYfNjOGGwHFXcjqNnIg3gRXwoViI6ZlbNQvzVVk0GvjHJJM6FFp6F1UGloAvgKSXSl9Z02w7zsckc2weGHa8rYilz9rjV7nOpWoxYr2ol49rAkNeXjVF1C38DJci31gT0m8OMnOHJ6kjCMaKSXIC5yZdv2WIKwUz3kaJggdlHXT61qJthkN262ZJc6z9IDU8Ej1uk/msDbmIMHfqQBUSBwk6YXDQoGBsoorsfLsmqQWru0m675Sz83/6Gjc8jj8GK+f2hbwamu4OPAJ/Qa4Tu4An/Z7l05ZPzJyl+lQjoaeGLSN7t2foPvMdAdZZSKzhIcKbUiGA04xdgyhw4GbvFdZ+S6DnIiq28orKlKupahmPZg1/i2l2Y3aWNw7r1Bu1EH6HKIjizSKD1w3vRb9oE27qTyPIZY0bPu5wovuSy+ofGV5JuGqE9duGG/S80aQ960O76f5lCu7pV45RC2C4dKEJUjYF+7YfdZ7ueIuXB/Jr9yUO9TOCVJj3QSkH3nf6XRw8yfdTqLHXqUtVtO0y8OzTJgkQCHglG5mhOTrG124ozxEWUPrus6KJOYk4F8GEHWUmFHdGMBqVD7CyZ+HnebDt++JQgbdABrEdpjvr/GGkaIlE/H7mYoqAfKUww24QNX7OE1TbzNBCFrN58fGQaXzrl2lRADq7Qx5i/QwxdqE4zfyVRW1UGXe49xeljDWZdlOaGDsxkkt7KVYDHWxvHRnZ3gvhS20o1qITTwwklg3mqRY3qQuD/K/BFFAuzR3cmZ0lIAgrnDCLk/EaPgC7aX3ZfVKbJiewB5CX4sBibLolplwk4ucviRQYWy5qbA2QTzCMTEshZHdwUeqodb1Zf3yxY+dh2fHVgnS9FhM+JR4sJAjK3T8tBqfBoiFnjgCRpXZCh9jMupOIE9473jOgX5Sn77AaAC3riaj9aetrQ/XHMfIBz9franMk5eQUeb7i//QAq8EetKWUrRpE3IkrXWscRf6X+hPFoLntUzt+vX/ttE8f+77X21nKG8HTL1BJMMmEynXXqPII8UiwVfYXsiOb3OetZVIDpUlzCf2SmQIzLV8YNAyM1gGUzsa5OV1bQRi+lxSJ3oawdoC19MPcNRSw915b57F53+aiyVk9OZAQCom1+axwU5FBePGvylgf1t40BWsRJ/FYJK4qHlIXqFJDTOALw9SdAaLXRW19/ZokdJPyrCwgQpUosdSbdidRX6G7WxklfkbrrbHp8cxBfskr/zodcvCNADZqPGRfjRRPRr5o3xLgzslv4FFWGS/prqoS5T60m2TSTh8clsRXQnwpKhuNdD2iUXRJBwUQ7PZEyHED66hjJw0AHBq454wVGk2jJgEOatqZH+Etttoi2JHNbNJY9CI7cTBHt575ZqL2kmtJbqvASPUHLdloYlp1UghlMZJu+U8jQ/cKw0IequznMeX/76WyL7r85Bn2D/ummTkM2CMrLJdCHGvbbr/ntmL9EPQ+6OyNNehoy/OgPES5/j6+qc6llUjnKVaZhsTuz913GQDNuGu8rwdwDlaXQKT0Js4u3nr0kc0BOZXBy80OMVeb/A8UkpdrW4intE03d6b+uXLWuUHA9C9hj+pcb/atMdsPW00tTfz5QN50WrYPr8vqcNu6rfxekL4MRCqXQMJLOypdIsR4NR3m8ciduwcck4OtArWbupao3+suU5gUWd0V3neU01Cjvn+vgw0VCguc0Ztmsqj2g5W7BnPnJKN3AJPdu9c2a/i02fU7HVfLMk4mbHusDvnBVkcWpcXodZT+XtxoogLeIQwOvErKn4TWaLKJJ86fnD9csoUjvdsgblE5orzeiLl7rkVzlITIGfzdg/DgE395QljVAa+7vQdv79xC17UADqli41xTugSntWT9GyW8xT9uKCuEDK8qA+NwqYw5EH+Q+pV1xfp7SGSIPwk30PR7nJpIMZ4L1h+s9kPnmlzvKxjHYpfo5HNvt8heAnp0Vy4nc2/MgsibiMEtiPzEF+NDklVYx1siqN39PnDbeVAcz/9qi8z+53kc7HivbUdV2wrEn9rjrBwki451q5ljUHvb5iG39a+s3WaYZvIx2v8qrNgQsKzbLWeqhecASvfsFoie5pS0MSTFaoSP15y9qjuTOVeAofiohdBRf0qut1q9G/LBX7kZ6Q6Ab+lZSaV/shpY2hvYcIynOQLoSys1EQCdFMrpTSQSTJBy+FS4FBrxzQRpi5xN5ZnqN1tzdoX/YX6zs8X3vrgKYzli/IOUlfnIJiXNDpfihfUfiKmB2RT29/AmCVCbAAkFb2hmr/6x+L4OZMB6JHKgZXHwjptiPEhVgwzRkcGeU+36G5YiZ0LPPzLI8bnVePCMcZsFn7sLvuRPFlXjHoUBMIxW4TzDKzf8dxfZi14LKEf/LNan7ge8P27sOsqPIHSnvcEcKOpHxhJ+DU77UWzGghs7Zk1EDXllPZp63hcftcz4NgSk1NAZQbPdiz6DmDEuCsTNW0ZTP/IMnz0VwlNrv0z90UV6jPkJ3jmVmtEfgB2aVwxg4rt7jnklmAW+ct6fD8Z2qtxB9NqnWvgBBSYwD3PAwdQQW84JuiKI4idt9Itz+x0NrG1/uSTn0rfywhfWX3Eid1qjWyzgr/IVT4J0FFC+C5W4gXC6DG2NLEt3Uz5vfY3nWdvgSgXanRnS2UJVwv/lYoVTqAQzSqXf4MsoLZDECUL2d0aJy8641NCifrWo8vZf5D7av/6uG4p7RRXzF/xi5VCje1A7UClWKpXmCbfosOWfrGXI9dGdBdBeiapMvVEl0oEXLC1qy0BBU5Rsp+MaY2kGMGX7wIMfnHFn4qwOqV0TJV2Zy9TacduWlVvxPWg2nTxb6Mgo1wODKVPK8pkjND1/4eJm+fQjrxWmvRXnYO2swXgw/KYywM1D/PmrJdCpMELNj8O7ruXugUWnpKZ/2dKOVpmWrLzNqE/qmHVKBt1R4wibQBKW7j+uupVLfSsT8ojeSqns7L8NqCXFJQvWEDguaLsE0CStptynCrb6WuYD1PQXQ08bavaoNwnO86v6qpJLBvhZH1VYRbL7ZSmWoJPeGgYfmypGlQvEEpGAiuB7SZLo+kroYiCaQLYHFOjce7htw8dpNTeD8+mxKWT8CucWZxUUMAyDteE7BoR+D9wUVYqZYQ/bnrQ938e7/tTo5XtpzS6cqR58s4P6uiRv5RsukomUgREyOECQejyIERxhyM3wTyAC/KXe0Nnouypa1tftEzjZDj8QD7GNPFw9Da1CSUXTnEzNB9gT5leL8BCMOQ36YdgdJ2YvX6O4nVXecbCM/fVg4Lytk0Zq9kwmFXpSPMrSHMdMemQRjczQXS2AnbBlZkd+r7JYeYEU4CB1/T//J0DBnMgXHczq7uoPILzC/aNC2SUVvVUhH4ZOaGqNfctuBe/aZXz83M9fmfXbyffg0SQ==
  template:
    metadata:
      creationTimestamp: null
      name: tls-secret
      namespace: dev
    type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  name: dbsvc
  namespace: dev
  labels:
    app: dbsvc
spec:
  clusterIP: None
  ports:
  - port: 3306
  selector:
    app: db
---
apiVersion: v1
kind: Service
metadata:
  name: dbsvc-read
  namespace: dev
  labels:
    app: dbsvc-read
    readonly: "true"
spec:
  ports:
  - port: 3306
  selector:
    app: db
---
apiVersion: v1
kind: Service
metadata:
  name: apisvc
  namespace: dev
spec:
  selector:
    tier: api
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: clientsvc
  namespace: dev
spec:
  type: ClusterIP
  selector:
    tier: frontend
  ports:
    - port: 80
      targetPort: 3000
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: db
  namespace: dev
  labels:
    tier: db
spec:
  selector:
    matchLabels:
      app: db
  serviceName: dbsvc
  replicas: 3
  template:
    metadata:
      labels:
        app: db
    spec:
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
        runAsNonRoot: true
      initContainers:
      - name: init-mysql
        image: mysql:5.7
        securityContext:
          runAsUser: 999
          runAsGroup: 999
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
             - ALL
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: root_password
        command:
        - bash
        - "-c"
        - |
          set -ex
          [[ $HOSTNAME =~ -([0-9]+)$ ]] || exit 1
          ordinal=${BASH_REMATCH[1]}
          echo [mysqld] > /mnt/conf.d/server-id.cnf
          echo server-id=$((100 + $ordinal)) >> /mnt/conf.d/server-id.cnf
          if [[ $ordinal -eq 0 ]]; then
            cp /mnt/config-map/primary.cnf /mnt/conf.d/
          else
            cp /mnt/config-map/replica.cnf /mnt/conf.d/
          fi
        volumeMounts:
        - name: conf
          mountPath: /mnt/conf.d
        - name: config-map
          mountPath: /mnt/config-map
      - name: clone-mysql
        image: gcr.io/google-samples/xtrabackup:1.0
        securityContext:
          runAsUser: 999
          runAsGroup: 999
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
             - ALL
        command:
        - bash
        - "-c"
        - |
          set -ex
          [[ -d /var/lib/mysql/mysql ]] && exit 0
          [[ `hostname` =~ -([0-9]+)$ ]] || exit 1
          ordinal=${BASH_REMATCH[1]}
          [[ $ordinal -eq 0 ]] && exit 0
          ncat --recv-only db-$(($ordinal-1)).dbsvc 3307 | xbstream -x -C /var/lib/mysql
          xtrabackup --prepare --target-dir=/var/lib/mysql
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
          subPath: mysql
        - name: conf
          mountPath: /etc/mysql/conf.d
      containers:
      - name: db
        image: wajeeh8/mysqlk8s
        imagePullPolicy: Always
        securityContext:
          runAsUser: 999
          runAsGroup: 999
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
             - ALL
        env:
        - name: MYSQL_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: admin_username
        - name: MYSQL_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: admin_password
        ports:
        - name: db
          containerPort: 3306
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
          subPath: mysql
        - name: conf
          mountPath: /etc/mysql/conf.d
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
        livenessProbe:
          exec:
            command:
            - bash
            - "-c"
            - |
              mysqladmin ping -u ${MYSQL_ADMIN_USER} -p${MYSQL_ADMIN_PASSWORD}
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - bash
            - "-c"
            - |
              mysql -h 127.0.0.1 -u ${MYSQL_ADMIN_USER} -p${MYSQL_ADMIN_PASSWORD} -e "SELECT 1"
          initialDelaySeconds: 5
          periodSeconds: 2
          timeoutSeconds: 1
      - name: xtrabackup
        image: gcr.io/google-samples/xtrabackup:1.0
        securityContext:
          runAsUser: 999
          runAsGroup: 999
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
             - ALL
        env:
        - name: MYSQL_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: admin_username
        - name: MYSQL_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: admin_password
        ports:
        - name: xtrabackup
          containerPort: 3307
        command:
        - bash
        - "-c"
        - |
          set -ex
          cd /var/lib/mysql
          if [[ -f xtrabackup_slave_info && "x$(<xtrabackup_slave_info)" != "x" ]]; then
            cat xtrabackup_slave_info | sed -E 's/;$//g' > change_master_to.sql.in
            rm -f xtrabackup_slave_info xtrabackup_binlog_info
          elif [[ -f xtrabackup_binlog_info ]]; then
            [[ `cat xtrabackup_binlog_info` =~ ^(.*?)[[:space:]]+(.*?)$ ]] || exit 1
            rm -f xtrabackup_binlog_info xtrabackup_slave_info
            echo "CHANGE MASTER TO MASTER_LOG_FILE='${BASH_REMATCH[1]}',\
                  MASTER_LOG_POS=${BASH_REMATCH[2]}" > change_master_to.sql.in
          fi

          if [[ -f change_master_to.sql.in ]]; then
            echo "Waiting for mysqld to be ready (accepting connections)"
            until mysql -h 127.0.0.1 -u $(MYSQL_ADMIN_USER) -p$(MYSQL_ADMIN_PASSWORD) -e "SELECT 1"; do sleep 1; done

            echo "Initializing replication from clone position"
            mysql -h 127.0.0.1 -u $(MYSQL_ADMIN_USER) -p$(MYSQL_ADMIN_PASSWORD) \
                  -e "$(<change_master_to.sql.in), \
                          MASTER_HOST='db-0.dbsvc', \
                          MASTER_USER='$(MYSQL_ADMIN_USER)', \
                          MASTER_PASSWORD='$(MYSQL_ADMIN_PASSWORD)', \
                          MASTER_CONNECT_RETRY=10; \
                        START SLAVE;" || exit 1
            mv change_master_to.sql.in change_master_to.sql.orig
          fi

          exec ncat --listen --keep-open --send-only --max-conns=1 3307 -c \
            "xtrabackup --backup --slave-info --stream=xbstream --host=127.0.0.1 --user=$(MYSQL_ADMIN_USER) --password=$(MYSQL_ADMIN_PASSWORD)"
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
          subPath: mysql
        - name: conf
          mountPath: /etc/mysql/conf.d
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
      volumes:
      - name: conf
        emptyDir: {}
      - name: config-map
        configMap:
          name: mysql
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 2Gi
---
