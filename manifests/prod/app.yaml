apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: prod
  labels:
    app: bookmark-app
    tier: api
spec:
  replicas: 3
  selector:
    matchLabels:
      tier: api
  template:
    metadata:
      labels:
        tier: api
    spec:
      securityContext:
        runAsUser: 33
        runAsGroup: 33
        fsGroup: 33
        runAsNonRoot: true
      containers:
      - name: bookmark-app-api
        image: wajeeh8/bookmark-app:serverk8s
        imagePullPolicy: Always
        securityContext:
          runAsUser: 33
          runAsGroup: 33
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
             - All
        env:
        - name: HOST
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: host
        - name: READ_HOST
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: read_host
        - name: USERNAME
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: admin_username
        - name: PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: admin_password
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: db_name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: client
  namespace: prod
  labels:
    app: bookmark-app
    tier: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      tier: frontend
  template:
    metadata:
      labels:
        tier: frontend
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        runAsNonRoot: true
      containers:
      - name: bookmark-app-client
        image: wajeeh8/bookmark-app:clientlatest
        imagePullPolicy: Always
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
             - ALL
        command: ["sh", "-c"]
        args: ['sed -i  "s/endpoint/https:\/\/api.bookmark.com/g" build/static/js/main.3ae9d6e4.js && serve -s build']
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: db-network-policy
  namespace: prod
spec:
  podSelector:
    matchLabels:
      app: db
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: db
    - podSelector:
        matchLabels:
          tier: api
    ports:
    - protocol: TCP
      port: 3306
    - protocol: TCP
      port: 3307
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  namespace: prod
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
     - bookmark.com
     - api.bookmark.com
    secretName: tls-secret
  rules:
  - host: bookmark.com
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: clientsvc
            port:
              number: 80
  - host: api.bookmark.com
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: apisvc
            port:
              number: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql
  namespace: prod
  labels:
    app: mysql
    app.kubernetes.io/name: mysql
data:
  primary.cnf: |
    [mysqld]
    log-bin
  replica.cnf: |
    [mysqld]
    super-read-only
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  creationTimestamp: null
  name: db-secrets
  namespace: prod
spec:
  encryptedData:
    admin_password: AgCeN+835fB7sgEjdEFmM8ETdF4O8VSm1h/jSxkB9iUEGa0RU1q8bx8jPFYal+ldEa/aY097Ts/eKlZJQO6SPXOmnpSuna2RxLwAw77siXFYQqtvdjKixHiF4GP/hiM/Kdomx1MlrJL6NpKtz3BIPUMAGWgZogV1v0x66J4RKOXPIcDL83PD4cDagq6RKcVjPVXRLXCI9pyx6UxAJvKpnREGiLyKBoDcJtNYff1xwDIAbeB5sFgwKmb9RbFihRmZUtSBI4ovkwDBUE/2lU8WaGcEwsCGuFsAmIt+kllErs961Sfxln1rBh8sDHIBSdFB+NG+hku7CBfzuxMv1Znv9Kqt7dN1fYlrgKLSOxokXcL+25KkYMyIX643kkV+lBbb44K7AgemqLPgEWKFmFG1RrmyfhBkup/XANCF8J4vQIshkSlL02udcNGZA1wEx9Eyujb+fFhisp/9T6lGiF55MDKK3XgQMxFYdmZqlx2WuEjR/ZSURAhrQmbtMUa8ZWjx5i+rOvT61mZZVGtyOU7FW7eET4eCCtKFndNEBIqwB4OmuPrEI2Te1dDtyqczoxj6y9DihyX1UZkA7zH3hzfcjICBWt5c1zG1nLd+b/cFakNavLIoqq5c41un7+NrdMmggpQMkMnAeozA5Y7z9TiqzWEeDZZ9zBuMcyo/ZzDICoBaG/egWKXdl5GvqQ4TCKgodbRHJOW+IqNMIjEm8g==
    admin_username: AgC000lU3tcvk+fed6H528ZNIO4LZYRLuhKLA7JiotH/CfeWPL3qM+SumSnfmk/wjqq9wgzWMFREEQIlVjLSCf9xZrEVri8sqCmAD8zAwDx706ZOIuhui6todd7KsAt4Sy7ZC1XH4QXiBTbLhQhEDAxir/Kp9Bkw4C0Vf13hl4WOEhWKJDPR9qHBARCFNq/IJuRZsYHGYlPUlB9kn0qk0vKn4iuck4LhaDBa1x7s/7Op5aQaaxFGcp0998Nma854wB73vhotvAzv23Cs/E9pt0n6HAbldCeyZIENAN9h/D/6FL5Whmg3pAheIieG2z5zZSiI1ZcfPmA7KW2p1rhbIxTLRlPBoamoW+h1Z3d2XgPKchIdjPeR7hvFJI68v5iBoxUl4OCxkEwd/FTRfUjZk+QmEOv7ndX3QPo0t6XAbJY1uaDu0zpS4ZUOkctayJlBj50JWq5yVSJVzqYZ/LyqQNM/fQ39vA19Dien8twdJMMeHDcXdtdh4YAxg6JQ7jIbbtF0tH3hCdOgV0u8c+coqduHoXiuJRvdyPkSG8J3MrA1PxOqPGUhSnRX0SlZ07rrEkQDiSUvuqd4QZDjPsR8iTuBze+5NHpLJQ5MTGpBL9qIjjf441rI0f9lhEAw+grsRcdKRDyJlqwEGhHwXERkIAZCf5KtwJOT7qgZ5rArHoBYofvTMF7xCPkG+cKpHad+sU/PEW8CNA==
    db_name: AgBfd+fKIcoLrBGuU5ea563sXKytqgatC0Sh39U2EkpB3azgdV/oafEkTXa03HggrJEJvDEgfAuXSfTx4gRqzeq17+BmIXiqELUBnJUhhTrOK8IAkQDecB5291tTiS+sDcAUuNt/EOLpAwIbMqVEwrYzDXpyJSuvvEXZpCLCr/6LqLznLgU1Xl7mPLe4xCGThvv8qL/UjfAKizxoFtGeca51M/TLskrVUBmAktLfjMOHAbni/RsPtRkxWPCDb075QKv89Jyb0TlX0pjRajAPtOFpuTsyDpZxW/UO4efT5raprbIDUNUNiem3AT2mCqbVReCYTiwqAqF3HdIAd1Qv6flEJwjgIzKDckx0v90BJPjMGhVwfGr1tw0xLzB//2RTIObRoGULXMmi5MFDgqQzGjkH1/eZ8yW3g5XXViCXxbbf9oAtCmLPaVw3jCF7wdRjfXHpB1eRgfmp0JIIkbeOy+4uHflEuGHqYRm7lAYpoZ0WWn9T2108YnNFjQH2jJ3uDpHOkDc19tk8XyPR34Z5ZPhbqYcXtyWPPYvNAFhFlYZsT4CGvw5a3SNB10tKI82My9DbzQFwYu+lkBbP6wAQckYoZHvUrTUrzazlql7fhVmrqAPqAkO+RMbPKbcMPFTQtLr5+w5ziOcJBhTWCcZNlo+Z9vvaBWXYHaCCU2ZSs2n8cShjRFH9hMX+wsstV4A4Z44uKtPw4hTLjRViaQp+lQ==
    host: AgAjK9UVzj/Cug1wdQJ7j7i1C+WQ0jAM5Zpo46ylLoDSS0ZZD4xBGIoC+KGMlaAI+CbTQQA1d9XDgOPoWlDxZ6TN/tz/SO4iWLumcuZAMWdwZx5OECPq2fw+ES5EkfLeYIZYj2zkCyAdKZNJiJsq6UuExHs+Ta5FFQ1l3c66kkM8nAh8wMETrBlB/D2zb0b8mACvu58zbIB760WmLWeibWH4yt8QzSbp8qvm5FqvfiKpb4vQfKByCH2AU8RSQK7XZpTqkAUf74QJkIRPC3o4YKrL2PtBkb2n+GqYOQBYd8oTr8pCvHSgapXVGF//aiFdbYJWhfybzTDXw6QJBGANUPSevrbuzHjPWThBCr+uHMU1LwE7tCkjvN4GbBkXtW4jNnrQr61EPgtXqIGwHtq3k43Ity04N4gbT+nyzXBKxlWMl244XKo6djq864JKVxvW8/FoR9tQT5T18XmLj/oZ0zfkezp2QaKwSDtu1AH3LtNxHUXDPZ1LgZEjM45Iks7vGiBEwW3ddVl1luxZA1G90gz+TsEXgJ/89RZHpHj0RBp2EaiRRr4hMpQvoXZ0MzHtkd8UJJ2GjgRjAds3j6TukjO34DCbH5lE265O3QHIJIZRrrcnka5ZTORPBVLcxsy0+7bXe5QgBVycN8NUJXQ7Q6yatJ8UXj+Rx4NGpI2p4TM5dTUjiyf9KxlOveTvajC/CF8C2emhGGjum9WH
    read_host: AgBPYOfRFF+a8aArX0qOTKCIC37kdeO7vRTfXtYG1qRAI85KlumI1S2do04WAF6kaWVyiRiainqLNCvCulVNR1JPYaXYlB3DP6Csl68ocy0+Y8cNSOx9HNxmrbo+i60Zc8ANxGOoAD6rL3gbdrKqfXbts+q/Sz+gpC4xaRywI+CROFygHWLxWK5CXBcKcKYka1Wr8FqiW4dirVVQ1l+OHz5K5QdT13r7LgPyOg+1JRbMe/3ptwmjDCq6KRewq6CNN660pRrSVG1CBINAeqAW5qrbkXMx5MmH1IdUus1tN5C4hk4uy7EfYF2JhQMIDMX80zvZtQdxG6zWTz+ualvTji1vVT/BUgLvGyZLbfG2qGny9kobOx3DYwjb3NfsBk1Go6eOhLtkQ/Qhc/jWN7Rnkc5+iMIfUb4bPTkusAWyfR+OOPs2+dPoJ399TUzz4OS8r+AapYCzYSvPvs6aV43YFa38QSZ22Cp2qr7GxpEYWjUkY+WUJXCir1ThL9xAsNbmvlma6CHcUBar5/+GWaiQSwzIsBaTWExQgnDMeGl8rEU542TAcvJ0fOXAMarKgFQlzdfNcu9s9yN/naoMpj+2dk8n5Q+YGEUxkyx6W8Pms1DLQaAUQa6gENdzFhTNAKuvL4bnsSCXbwdseMncCbCzKgpsvAldFINdI9B9wK/OyAkrfpgLBLolXPzzMmXUdBwXTkcUeVm8P7BGR+wz
    root_password: AgAgicJFs3CW7LlFNbK2N/C/7XhKbQ1xmyIlCz8g2iXevNPD/kQUf4WjTxorOAbu2rm9Pg2ALkHwppib/jvlAXtELzRk4BS4SS3r0dzR8AwbA63FdLZrAt5YrPc5r53U2Ny1uObXisBBTR7w0MejRXxwGHxyytmrOFG9HYnlNqaMT+TohwMcYYEy72thut79v7e5Z0+FFsXG14tPqKW5Grq2buGGZEitvfliFcm2KIh/qzIyVYZg1wegMOjGES7lazwqDrRmm51qAbSsllf7YvD6nuo9yI5geWoOzfaXBLfOjnNufD8xDW3Ht9x7PiVpM7yXf5zG+N72NZzWA+4Ly3cCCyApga3VmWDnGa9CjqT07A8fl5lkMEN15hdK8e5FEOmR943oXJz2G3+mWRedHD1AgS9+1QvGxYO53cGMSQL7lX+pLUZWIyn/4cK+SFCHFIgZR4SCs+js0FMeEqhhkD6MCk8Z2hiYavlncuq9ZfT2sJQj6CuDT8jQNHCTR/OJXdr+Vz3FUHFki04H23w3gMJSIKMUNX/PvKe71pzItqzeepSydzhXveaKctFMKhyTvaeFgwl1xRyCs7baP8yLVticg88hN4cJBGGo3NpaJVcE2wC2g8Qh1UWktyk3B3YX80QWysqjzxoIrcry2JS9yGY1lsHhLKLa+gtZr9mY7Pr/8Xgb4LymAhafFoAg2Sh/kVYnP9E8
    root_username: AgBWLY7lUKev7+aFrJPHfmYG9+V6ugZvwXdcTIoy9Lz8G/yUEG7QJvTkxn/DTeGe2sNpyvpaChA9YWFIZFRnuYmpZVsJUcitwkSIK9z/MygDLJsup5hbdNQUyg47vVNryRAF/A3GEZU9Vtjekq6D2mAHLD9k8VRjAGBmsVMpxertQBl7IXJggG/pj3/g4QZsqIsLz+mcck510mSYaq15xDuK9KV6e57NZqa5EQNiZXHU93Rz951bV8lbjyiAO9+ZuaHddJqoeJMMca6vVDV+n/UKH++YyLEc2Ym/p/tKPiBoW6zeq/C9UFMUawoGW8C+ezf+541YT618rHIkF6pCpO1Giwts58jJqE5W2FgRzOtBZlxGrH0XjcJei2gvaNxImUA0nuJO+CMLrk8PeICjHl9uNqdW9X1di6DZ4vGzWUSS4fgUTwibWr3/GWnJMr50FSmTpDTqsdXP9nZm85cU+a8v7zst64+O5n1WmrrvmY4U85hUzv8c9j4a8VgI6ijTkcubUAssqlHBwvZUQXjvLWS2SooUzA/dLV7ayxE3wCsD06BR4jLUF8DX3tjYvcH2kOhy5Frkun2ezr9IwWuSYU47jUnY9VPl0EeJRwNolQiRcijjneF7wRj1x6QK5lj34MESZUgTlqPxUR9iC7N73cp9rShOPwO3CohwZA+EdjcVq4q1GXcKMq9U2ltdSe4/7GjEyCQm
  template:
    metadata:
      creationTimestamp: null
      name: db-secrets
      namespace: prod
    type: Opaque
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  creationTimestamp: null
  name: tls-secret
  namespace: prod
spec:
  encryptedData:
    tls.crt: AgB+cqHTrwrwXadp1RPLH00rD3AYOU+390H2kA/V7Y57tFLknuDIsrzf/GRZSLtHdDy8XZxlhF1e9AR9u+Bcg5PC8PdBub/BF/jJ1W07NaIsxiLFFXz/zXIi8u8b87W67zeMxLewly7xRsLjjQjv4JuhL+e6cw8SHgP27xzShId67von4bwzQmTlQXav76T2wFzU/bAPExZ0CEJIyt3mQ6aqKpB1RALQSVkOzKthl34il1Uf75KAxQVJf7p8PUXmDo3se0EYS9g5kiR3Kl/blp4ET97/z5XYQSDClcvDdrKtc+8aLpVn6sTdhdYGeoR3FN58ySrmA6BlxWSWM5DbRxgVGrS7qkOqCnuxtSa56VXX3wvjJP7DJl6IFLt+3G01iJlOu8M/vxl52DdCI9KZKBHwV/rWrqVs2NdjgokiBC6n/KiEPLVeb0pI9qoaGKWAn7NkruOUDTIS6wEUPGaQdQ6ahzdfnRKSO8pZr0a8uS7GKgZGrl50+Tf7tq2dnWRoyBHAMm9knMZ3W9c4Rk58jens6zqn99i++GNb+5UAuT1wUmGa52nx0VLT8leMzSvS/jUx6P+JQ0oJZOj1tg3IqYuJXuBSRr8gIdN8IYcKVoN11TbkBLNxMErEDY9kn1NqELHuxYXsc0bBDCgT1veJvrwerYDpNiLgzRcYz4oJCbmZDtXM9Ijd4vtJOamOR6Ru+G7wlmFK9rgJqHcVkeNir3qQde/mY3h5yC4Cmd9AaVIMT5I6dTjZBI2qFy8nSGYV/DZzP6i/6VcF/BFHldJulDEzh+3S+TmIgFC0jx2SwrPZu8IAjPpE8mpV3oebl11HEql19UWbhJCTIew/Bbj7tne9XyCxM7aRxzOJm/EHtv7yJDwA3/fs5AbjU6PN7V96sbR8dkNipu56jlLJLBJJ+PgcMoWAnvYFc2Jj98W6EbTt37iFXZL04Q7WuJiIYaE0sqZ3GAnuZ8iXevhCNx2Cf5UKniqxHbLnTTJON0CTtCJoc18Fizx+t5aRbzMSs7ExIPrAbA4xPEVKLsLV5wpv0VLvJFt8x55pBwyk/rNTjrsDKY5g04/Vj5vcpFj8d79AuTmULkxt9/mMXWVWGi65niG3bEQy/EAhO03GZg6xT0DhLOlB2PxDXjUvx0jetb8iXzb7+MK8TBm3PGqNrUZ/UHevtw6ZhaiTYJep2VSu9gyUGI0nYbLeGrBAkWcL7Wo4YdSSxzyE6vciWwfkAwX17sWnFbMnzXLxJe7ZLYnwVnfS4xPS7zmpj/C9/iQm+bwRJeccBbRK+K31oXaRDu12BpVAkdnte0p7L2UIyVvl1gedFopGl9Lf2IrbbJe9vLjdmZBkivoAvnyGteX4ZL8EZkJQMQyheh3DdtGSiM7NhjH52VOV2/Tw1qewMdng4sV/NV8duf8cjsa/BDdLcBEwG4tXjBHerVma/Af/ktsJ2l7Pbiro6cKxVW5E7KBqIktX4vbvJL+I5EtEZapw58ZXztufmgKib1xyusIJOdHDNZCf+BqPWVAifNTdViK/jrRNqCuz64AXTaOH9mWNfjWc7Er3PxswR/otUewYEQuTVZ8sWQvIjYKTXIgYIHl/5m7HRSR150MohQNbDMO5/XWPS6lWy4D4rvayfnCOuQg0NZz5aV06QIrGaOvxF0rBdsmqfcBu2uxu1vrboderBG3CBV0gHjL2X7qCjkSfZl7HrS+nbYXSQr/QHnLVuMTs0ireGF02PQBnt0MbNYMSmaM/Q2mfB0OSKP40dfFz1UuAOnFSsoZV2HMKjpH6AlbXkri+acSiQZxhEYCEMhE6LZJEqm6Jb41XwJRYXYZ9Jb5w1kHv7NPdthScxVB0cT/HtEhohBlvt+nvQXAkQHqmh1YXJ6sGkGE0IsyR5t+EdAqfaHqiX+WMEGGMxcGAlJeykBNqJKTZWxY85ASFPDqMMNvOzz3FHhasJfbVfGzQTfkMdqEDjDKJAMN8jvVbPC6YXbxuWhoJpC5+mO6GRuYuZOq6iHxUtUWWNtZsV2oWTX5b5i76CPjYJs+WH5VrlS5hcQ0hOzZR0zunrjIPAD2DsuOsqRW513ehv/eyyrJxMc1EIJZgT0z93fFIRZpHRTe6O2Q6i0A8iSZVgout1ChwY5YVc045lKOQwqIl7BTHuoqjffc/QOQecZCp4Skmy3DpKLGSNCxunQ4bndObe8U48w32sP31/JLZQZ4CYA0hSpJ4S8EVvMU3ioDdu7fRhOSVlmb2GMEu+8ShJhOKxcGzIk/vRQNXk25PMElOl6LD1NR/GRPgXbPnRBU9fAgGmuZM0Z8Easfzw9GaU6njPWqQ4CscyMyme3hRfcuoY1smaKd6SS0bylOJHG0AlFCXukrKrihgWyPnu/YqVrH1Q+4WlxGo1njBXmIVrEp3S50fVizXN3LXPtRzb3KQb7qbHhWznYHKbUlpvQsorUkgmjbi/pnuE7PNnYMfq02AMmSbn/cn4LglBbjrs8rP2VnI9mQ8UK5RCSdF2vjPecFEmIbCIWYMGPe+IUPo3KDHZnn5AolIfNqnMqR4H6X+/9LHlA9NyeA0Wz3Ku0oebDtt2J+nLdkxNN6pSjx+cpou+ouS/p8c52ibDI8RK+BE2A/E5dO9Eus0qRyfDVsplzCF7P67ugTnSw24iFkHMJLSYKwe6QhWfgZZLz8uteQAn/3bTwq38ZrYKCHvb8JOdIvPjtfKRqc/beJ+S/xpiQbG626248CQcG59cWrQPprv6WZJoss+32+F6XhKOyUAWeg0SS4MHpCJP8VU7btkpe5ItPvHQ5lgijTfoWKPZ8V4w2NUyg+7TZobHSfLkTOhfj96NrbJY/bYz7vLNy5gxwfwR7eh/koFetyl1bQhG+SCYYGUhkJFOkEFP0U8Rq92ggp7PyjUrqH76Kmer8yQAKA9ZY6RMH9SK84d5ao0aCwDE7FYO5bYRt7uyffs3pBBJO+Yle5vdEefKLjXKcFv3TZ8NNIzLESaHS9fUqwJ6+9Dz0eoxSim4ogFvt4L5NPaEloM0KzsDduumviyuIxC0xRQ7tYN0IQUg7dTC6Y+AKeXQNnShMwf9YwnQcCck3wIB82Zja9/3Vsf/QJRVcMQ3SpwdgBqfBbBz0wBRfCn6zrJUCjtx7AlYJ27Dk3jhUM70DYYpuLbIZVBAENDMhYey9lYvsox8HduuEtAZCUqYejJ6EOfFOpK3lVtGHM5Sw==
    tls.key: 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
  template:
    metadata:
      creationTimestamp: null
      name: tls-secret
      namespace: prod
    type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  name: dbsvc
  namespace: prod
  labels:
    app: dbsvc
spec:
  clusterIP: None
  ports:
  - port: 3306
  selector:
    app: db
---
apiVersion: v1
kind: Service
metadata:
  name: dbsvc-read
  namespace: prod
  labels:
    app: dbsvc-read
    readonly: "true"
spec:
  ports:
  - port: 3306
  selector:
    app: db
---
apiVersion: v1
kind: Service
metadata:
  name: apisvc
  namespace: prod
spec:
  selector:
    tier: api
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: clientsvc
  namespace: prod
spec:
  type: ClusterIP
  selector:
    tier: frontend
  ports:
    - port: 80
      targetPort: 3000
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: db
  namespace: prod
  labels:
    tier: db
spec:
  selector:
    matchLabels:
      app: db
  serviceName: dbsvc
  replicas: 3
  template:
    metadata:
      labels:
        app: db
    spec:
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
        runAsNonRoot: true
      initContainers:
      - name: init-mysql
        image: mysql:5.7
        securityContext:
          runAsUser: 999
          runAsGroup: 999
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
             - ALL
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: root_password
        command:
        - bash
        - "-c"
        - |
          set -ex
          [[ $HOSTNAME =~ -([0-9]+)$ ]] || exit 1
          ordinal=${BASH_REMATCH[1]}
          echo [mysqld] > /mnt/conf.d/server-id.cnf
          echo server-id=$((100 + $ordinal)) >> /mnt/conf.d/server-id.cnf
          if [[ $ordinal -eq 0 ]]; then
            cp /mnt/config-map/primary.cnf /mnt/conf.d/
          else
            cp /mnt/config-map/replica.cnf /mnt/conf.d/
          fi
        volumeMounts:
        - name: conf
          mountPath: /mnt/conf.d
        - name: config-map
          mountPath: /mnt/config-map
      - name: clone-mysql
        image: gcr.io/google-samples/xtrabackup:1.0
        securityContext:
          runAsUser: 999
          runAsGroup: 999
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
             - ALL
        command:
        - bash
        - "-c"
        - |
          set -ex
          [[ -d /var/lib/mysql/mysql ]] && exit 0
          [[ `hostname` =~ -([0-9]+)$ ]] || exit 1
          ordinal=${BASH_REMATCH[1]}
          [[ $ordinal -eq 0 ]] && exit 0
          ncat --recv-only db-$(($ordinal-1)).dbsvc 3307 | xbstream -x -C /var/lib/mysql
          xtrabackup --prepare --target-dir=/var/lib/mysql
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
          subPath: mysql
        - name: conf
          mountPath: /etc/mysql/conf.d
      containers:
      - name: db
        image: wajeeh8/mysqlk8s
        imagePullPolicy: Always
        securityContext:
          runAsUser: 999
          runAsGroup: 999
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
             - ALL
        env:
        - name: MYSQL_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: admin_username
        - name: MYSQL_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: admin_password
        ports:
        - name: db
          containerPort: 3306
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
          subPath: mysql
        - name: conf
          mountPath: /etc/mysql/conf.d
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
        livenessProbe:
          exec:
            command:
            - bash
            - "-c"
            - |
              mysqladmin ping -u ${MYSQL_ADMIN_USER} -p${MYSQL_ADMIN_PASSWORD}
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - bash
            - "-c"
            - |
              mysql -h 127.0.0.1 -u ${MYSQL_ADMIN_USER} -p${MYSQL_ADMIN_PASSWORD} -e "SELECT 1"
          initialDelaySeconds: 5
          periodSeconds: 2
          timeoutSeconds: 1
      - name: xtrabackup
        image: gcr.io/google-samples/xtrabackup:1.0
        securityContext:
          runAsUser: 999
          runAsGroup: 999
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
             - ALL
        env:
        - name: MYSQL_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: admin_username
        - name: MYSQL_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: admin_password
        ports:
        - name: xtrabackup
          containerPort: 3307
        command:
        - bash
        - "-c"
        - |
          set -ex
          cd /var/lib/mysql
          if [[ -f xtrabackup_slave_info && "x$(<xtrabackup_slave_info)" != "x" ]]; then
            cat xtrabackup_slave_info | sed -E 's/;$//g' > change_master_to.sql.in
            rm -f xtrabackup_slave_info xtrabackup_binlog_info
          elif [[ -f xtrabackup_binlog_info ]]; then
            [[ `cat xtrabackup_binlog_info` =~ ^(.*?)[[:space:]]+(.*?)$ ]] || exit 1
            rm -f xtrabackup_binlog_info xtrabackup_slave_info
            echo "CHANGE MASTER TO MASTER_LOG_FILE='${BASH_REMATCH[1]}',\
                  MASTER_LOG_POS=${BASH_REMATCH[2]}" > change_master_to.sql.in
          fi

          if [[ -f change_master_to.sql.in ]]; then
            echo "Waiting for mysqld to be ready (accepting connections)"
            until mysql -h 127.0.0.1 -u $(MYSQL_ADMIN_USER) -p$(MYSQL_ADMIN_PASSWORD) -e "SELECT 1"; do sleep 1; done

            echo "Initializing replication from clone position"
            mysql -h 127.0.0.1 -u $(MYSQL_ADMIN_USER) -p$(MYSQL_ADMIN_PASSWORD) \
                  -e "$(<change_master_to.sql.in), \
                          MASTER_HOST='db-0.dbsvc', \
                          MASTER_USER='$(MYSQL_ADMIN_USER)', \
                          MASTER_PASSWORD='$(MYSQL_ADMIN_PASSWORD)', \
                          MASTER_CONNECT_RETRY=10; \
                        START SLAVE;" || exit 1
            mv change_master_to.sql.in change_master_to.sql.orig
          fi

          exec ncat --listen --keep-open --send-only --max-conns=1 3307 -c \
            "xtrabackup --backup --slave-info --stream=xbstream --host=127.0.0.1 --user=$(MYSQL_ADMIN_USER) --password=$(MYSQL_ADMIN_PASSWORD)"
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
          subPath: mysql
        - name: conf
          mountPath: /etc/mysql/conf.d
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
      volumes:
      - name: conf
        emptyDir: {}
      - name: config-map
        configMap:
          name: mysql
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 2Gi
---
